dev.off() #da un errore strano anche se funziona tutto
}
#display expressions
display_network(df_BoolNet_expressions.LumA, values_BoolNet_expressions.LumA, "LumA - Expressions")
display_network(df_BoolNet_expressions.LumB, values_BoolNet_expressions.LumB, "LumB - Expressions")
display_network(df_BoolNet_expressions.Basal, values_BoolNet_expressions.Basal, "Basal - Expressions")
#display proteins
display_network(df_BoolNet_proteomics.LumA, values_BoolNet_proteomics.LumA, "LumA - Proteomics")
display_network(df_BoolNet_proteomics.LumB, values_BoolNet_proteomics.LumB, "LumB - Proteomics")
display_network(df_BoolNet_proteomics.Basal, values_BoolNet_proteomics.Basal, "Basal - Proteomics")
#given 2 dataframes, genes and their kind of edge, displays the relative graph
display_network <-function(df, values, title){
net <- graph.data.frame(df, directed=T)
net <- set_edge_attr(net, "Legame", index=E(net), value=values)
E(net)$color[E(net)$Legame == 1] <- 'green'
E(net)$color[E(net)$Legame == 2] <- 'red'
E(net)$color[E(net)$Legame == 3] <- 'blue'
E(net)$color[E(net)$Legame == 4] <- 'orange'
png(file=paste("MyResults/Plots/",title, ".png"), width=1440, height=1440)
plot(net, edge.arrow.size=.7, edge.curved=.3, vertex.size=6, main=title)
legend(0.9, -0.65,
c("Low=>Low", "Low=>High", "High=>Low", "High=>High"),
col = c("green", "red", "blue", "orange"),
cex = 0.8,
lwd = 1, lty = 1)
dev.off() #da un errore strano anche se funziona tutto
}
#display expressions
display_network(df_BoolNet_expressions.LumA, values_BoolNet_expressions.LumA, "LumA - Expressions")
display_network(df_BoolNet_expressions.LumB, values_BoolNet_expressions.LumB, "LumB - Expressions")
display_network(df_BoolNet_expressions.Basal, values_BoolNet_expressions.Basal, "Basal - Expressions")
#display proteins
display_network(df_BoolNet_proteomics.LumA, values_BoolNet_proteomics.LumA, "LumA - Proteomics")
display_network(df_BoolNet_proteomics.LumB, values_BoolNet_proteomics.LumB, "LumB - Proteomics")
display_network(df_BoolNet_proteomics.Basal, values_BoolNet_proteomics.Basal, "Basal - Proteomics")
#given 2 dataframes, genes and their kind of edge, displays the relative graph
display_network <-function(df, values, title){
net <- graph.data.frame(df, directed=T)
net <- set_edge_attr(net, "Legame", index=E(net), value=values)
E(net)$color[E(net)$Legame == 1] <- 'green'
E(net)$color[E(net)$Legame == 2] <- 'red'
E(net)$color[E(net)$Legame == 3] <- 'blue'
E(net)$color[E(net)$Legame == 4] <- 'orange'
png(file=paste("MyResults/Plots/",title, ".png"), width=1440, height=1440)
plot(net, edge.arrow.size=.8, edge.curved=.3, vertex.size=6.5, main=title)
legend(0.9, -0.65,
c("Low=>Low", "Low=>High", "High=>Low", "High=>High"),
col = c("green", "red", "blue", "orange"),
cex = 0.8,
lwd = 1, lty = 1)
dev.off() #da un errore strano anche se funziona tutto
}
#display expressions
display_network(df_BoolNet_expressions.LumA, values_BoolNet_expressions.LumA, "LumA - Expressions")
display_network(df_BoolNet_expressions.LumB, values_BoolNet_expressions.LumB, "LumB - Expressions")
display_network(df_BoolNet_expressions.Basal, values_BoolNet_expressions.Basal, "Basal - Expressions")
#display proteins
display_network(df_BoolNet_proteomics.LumA, values_BoolNet_proteomics.LumA, "LumA - Proteomics")
display_network(df_BoolNet_proteomics.LumB, values_BoolNet_proteomics.LumB, "LumB - Proteomics")
display_network(df_BoolNet_proteomics.Basal, values_BoolNet_proteomics.Basal, "Basal - Proteomics")
#given 2 dataframes, genes and their kind of edge, displays the relative graph
display_network <-function(df, values, title){
net <- graph.data.frame(df, directed=T)
net <- set_edge_attr(net, "Legame", index=E(net), value=values)
E(net)$color[E(net)$Legame == 1] <- 'green'
E(net)$color[E(net)$Legame == 2] <- 'red'
E(net)$color[E(net)$Legame == 3] <- 'blue'
E(net)$color[E(net)$Legame == 4] <- 'orange'
png(file=paste("MyResults/Plots/",title, ".png"), width=1440, height=1440)
plot(net, edge.arrow.size=.8, edge.curved=.3, edge.width=1, vertex.size=6.5, main=title)
legend(0.9, -0.65,
c("Low=>Low", "Low=>High", "High=>Low", "High=>High"),
col = c("green", "red", "blue", "orange"),
cex = 0.8,
lwd = 1, lty = 1)
dev.off() #da un errore strano anche se funziona tutto
}
#display expressions
display_network(df_BoolNet_expressions.LumA, values_BoolNet_expressions.LumA, "LumA - Expressions")
#given 2 dataframes, genes and their kind of edge, displays the relative graph
display_network <-function(df, values, title){
net <- graph.data.frame(df, directed=T)
net <- set_edge_attr(net, "Legame", index=E(net), value=values)
E(net)$color[E(net)$Legame == 1] <- 'green'
E(net)$color[E(net)$Legame == 2] <- 'red'
E(net)$color[E(net)$Legame == 3] <- 'blue'
E(net)$color[E(net)$Legame == 4] <- 'orange'
png(file=paste("MyResults/Plots/",title, ".png"), width=1440, height=1440)
plot(net, edge.arrow.size=.8, edge.curved=.3, edge.width=1.5, vertex.size=6.5, main=title)
legend(0.9, -0.65,
c("Low=>Low", "Low=>High", "High=>Low", "High=>High"),
col = c("green", "red", "blue", "orange"),
cex = 0.8,
lwd = 1, lty = 1)
dev.off() #da un errore strano anche se funziona tutto
}
#display expressions
display_network(df_BoolNet_expressions.LumA, values_BoolNet_expressions.LumA, "LumA - Expressions")
display_network(df_BoolNet_expressions.LumB, values_BoolNet_expressions.LumB, "LumB - Expressions")
display_network(df_BoolNet_expressions.Basal, values_BoolNet_expressions.Basal, "Basal - Expressions")
#display proteins
display_network(df_BoolNet_proteomics.LumA, values_BoolNet_proteomics.LumA, "LumA - Proteomics")
display_network(df_BoolNet_proteomics.LumB, values_BoolNet_proteomics.LumB, "LumB - Proteomics")
display_network(df_BoolNet_proteomics.Basal, values_BoolNet_proteomics.Basal, "Basal - Proteomics")
#given 2 dataframes, genes and their kind of edge, displays the relative graph
display_network <-function(df, values, title){
net <- graph.data.frame(df, directed=T)
net <- set_edge_attr(net, "Legame", index=E(net), value=values)
E(net)$color[E(net)$Legame == 1] <- 'green'
E(net)$color[E(net)$Legame == 2] <- 'red'
E(net)$color[E(net)$Legame == 3] <- 'blue'
E(net)$color[E(net)$Legame == 4] <- 'orange'
png(file=paste("MyResults/Plots/",title, ".png"), width=1440, height=1440)
plot(net, edge.arrow.size=.8, edge.curved=.3, edge.width=2.5, vertex.size=6.5, main=title)
legend(0.9, -0.65,
c("Low=>Low", "Low=>High", "High=>Low", "High=>High"),
col = c("green", "red", "blue", "orange"),
cex = 0.8,
lwd = 1, lty = 1)
dev.off() #da un errore strano anche se funziona tutto
}
#display expressions
display_network(df_BoolNet_expressions.LumA, values_BoolNet_expressions.LumA, "LumA - Expressions")
display_network(df_BoolNet_expressions.LumB, values_BoolNet_expressions.LumB, "LumB - Expressions")
display_network(df_BoolNet_expressions.Basal, values_BoolNet_expressions.Basal, "Basal - Expressions")
#display proteins
display_network(df_BoolNet_proteomics.LumA, values_BoolNet_proteomics.LumA, "LumA - Proteomics")
display_network(df_BoolNet_proteomics.LumB, values_BoolNet_proteomics.LumB, "LumB - Proteomics")
display_network(df_BoolNet_proteomics.Basal, values_BoolNet_proteomics.Basal, "Basal - Proteomics")
#given 2 dataframes, genes and their kind of edge, displays the relative graph
display_network <-function(df, values, title){
net <- graph.data.frame(df, directed=T)
net <- set_edge_attr(net, "Legame", index=E(net), value=values)
E(net)$color[E(net)$Legame == 1] <- 'green'
E(net)$color[E(net)$Legame == 2] <- 'red'
E(net)$color[E(net)$Legame == 3] <- 'blue'
E(net)$color[E(net)$Legame == 4] <- 'orange'
png(file=paste("MyResults/Plots/",title, ".png"), width=1440, height=1440)
plot(net, edge.arrow.size=1, edge.curved=.3, edge.width=2.5, vertex.size=6.5, main=title)
legend(0.9, -0.65,
c("Low=>Low", "Low=>High", "High=>Low", "High=>High"),
col = c("green", "red", "blue", "orange"),
cex = 0.8,
lwd = 1, lty = 1)
dev.off() #da un errore strano anche se funziona tutto
}
#display expressions
display_network(df_BoolNet_expressions.LumA, values_BoolNet_expressions.LumA, "LumA - Expressions")
display_network(df_BoolNet_expressions.LumB, values_BoolNet_expressions.LumB, "LumB - Expressions")
display_network(df_BoolNet_expressions.Basal, values_BoolNet_expressions.Basal, "Basal - Expressions")
#display proteins
display_network(df_BoolNet_proteomics.LumA, values_BoolNet_proteomics.LumA, "LumA - Proteomics")
display_network(df_BoolNet_proteomics.LumB, values_BoolNet_proteomics.LumB, "LumB - Proteomics")
display_network(df_BoolNet_proteomics.Basal, values_BoolNet_proteomics.Basal, "Basal - Proteomics")
#given 2 dataframes, genes and their kind of edge, displays the relative graph
display_network <-function(df, values, title){
net <- graph.data.frame(df, directed=T)
net <- set_edge_attr(net, "Legame", index=E(net), value=values)
E(net)$color[E(net)$Legame == 1] <- 'green'
E(net)$color[E(net)$Legame == 2] <- 'red'
E(net)$color[E(net)$Legame == 3] <- 'blue'
E(net)$color[E(net)$Legame == 4] <- 'orange'
png(file=paste("MyResults/Plots/",title, ".png"), width=1440, height=1440)
plot(net, edge.arrow.size=1, edge.curved=.3, edge.width=2.5, edge.arrow.color="black" vertex.size=6.5, main=title)
legend(0.9, -0.65,
c("Low=>Low", "Low=>High", "High=>Low", "High=>High"),
col = c("green", "red", "blue", "orange"),
cex = 0.8,
lwd = 1, lty = 1)
dev.off() #da un errore strano anche se funziona tutto
}
#given 2 dataframes, genes and their kind of edge, displays the relative graph
display_network <-function(df, values, title){
net <- graph.data.frame(df, directed=T)
net <- set_edge_attr(net, "Legame", index=E(net), value=values)
E(net)$color[E(net)$Legame == 1] <- 'green'
E(net)$color[E(net)$Legame == 2] <- 'red'
E(net)$color[E(net)$Legame == 3] <- 'blue'
E(net)$color[E(net)$Legame == 4] <- 'orange'
png(file=paste("MyResults/Plots/",title, ".png"), width=1440, height=1440)
plot(net, edge.arrow.size=1, edge.curved=.3, edge.width=2.5, edge.arrow.color="black", vertex.size=6.5, main=title)
legend(0.9, -0.65,
c("Low=>Low", "Low=>High", "High=>Low", "High=>High"),
col = c("green", "red", "blue", "orange"),
cex = 0.8,
lwd = 1, lty = 1)
dev.off() #da un errore strano anche se funziona tutto
}
#display expressions
display_network(df_BoolNet_expressions.LumA, values_BoolNet_expressions.LumA, "LumA - Expressions")
display_network(df_BoolNet_expressions.LumB, values_BoolNet_expressions.LumB, "LumB - Expressions")
display_network(df_BoolNet_expressions.Basal, values_BoolNet_expressions.Basal, "Basal - Expressions")
#display proteins
display_network(df_BoolNet_proteomics.LumA, values_BoolNet_proteomics.LumA, "LumA - Proteomics")
display_network(df_BoolNet_proteomics.LumB, values_BoolNet_proteomics.LumB, "LumB - Proteomics")
display_network(df_BoolNet_proteomics.Basal, values_BoolNet_proteomics.Basal, "Basal - Proteomics")
#given 2 dataframes, genes and their kind of edge, displays the relative graph
display_network <-function(df, values, title){
net <- graph.data.frame(df, directed=T)
net <- set_edge_attr(net, "Legame", index=E(net), value=values)
E(net)$color[E(net)$Legame == 1] <- 'green'
E(net)$color[E(net)$Legame == 2] <- 'red'
E(net)$color[E(net)$Legame == 3] <- 'blue'
E(net)$color[E(net)$Legame == 4] <- 'orange'
png(file=paste("MyResults/Plots/",title, ".png"), width=1440, height=1440)
plot(net, edge.arrow.size=1, edge.curved=.3, edge.width=2.5, vertex.size=6.5, main=title)
legend(0.9, -0.65,
c("Low=>Low", "Low=>High", "High=>Low", "High=>High"),
col = c("green", "red", "blue", "orange"),
cex = 1.5,
lwd = 1, lty = 1)
dev.off() #da un errore strano anche se funziona tutto
}
#display expressions
display_network(df_BoolNet_expressions.LumA, values_BoolNet_expressions.LumA, "LumA - Expressions")
display_network(df_BoolNet_expressions.LumB, values_BoolNet_expressions.LumB, "LumB - Expressions")
display_network(df_BoolNet_expressions.Basal, values_BoolNet_expressions.Basal, "Basal - Expressions")
#display proteins
display_network(df_BoolNet_proteomics.LumA, values_BoolNet_proteomics.LumA, "LumA - Proteomics")
display_network(df_BoolNet_proteomics.LumB, values_BoolNet_proteomics.LumB, "LumB - Proteomics")
display_network(df_BoolNet_proteomics.Basal, values_BoolNet_proteomics.Basal, "Basal - Proteomics")
#given 2 dataframes, genes and their kind of edge, displays the relative graph
display_network <-function(df, values, title){
net <- graph.data.frame(df, directed=T)
net <- set_edge_attr(net, "Legame", index=E(net), value=values)
E(net)$color[E(net)$Legame == 1] <- 'green'
E(net)$color[E(net)$Legame == 2] <- 'red'
E(net)$color[E(net)$Legame == 3] <- 'blue'
E(net)$color[E(net)$Legame == 4] <- 'orange'
png(file=paste("MyResults/Plots/",title, ".png"), width=1440, height=1440)
plot(net, edge.arrow.size=1, edge.curved=.3, edge.width=2.5, vertex.size=6.5, main=title)
legend(0.9, -0.65,
c("Low=>Low", "Low=>High", "High=>Low", "High=>High"),
col = c("green", "red", "blue", "orange"),
cex = 2.5,
lwd = 1, lty = 1)
dev.off() #da un errore strano anche se funziona tutto
}
#display expressions
display_network(df_BoolNet_expressions.LumA, values_BoolNet_expressions.LumA, "LumA - Expressions")
display_network(df_BoolNet_expressions.LumB, values_BoolNet_expressions.LumB, "LumB - Expressions")
display_network(df_BoolNet_expressions.Basal, values_BoolNet_expressions.Basal, "Basal - Expressions")
#display proteins
display_network(df_BoolNet_proteomics.LumA, values_BoolNet_proteomics.LumA, "LumA - Proteomics")
display_network(df_BoolNet_proteomics.LumB, values_BoolNet_proteomics.LumB, "LumB - Proteomics")
display_network(df_BoolNet_proteomics.Basal, values_BoolNet_proteomics.Basal, "Basal - Proteomics")
#given 2 dataframes, genes and their kind of edge, displays the relative graph
display_network <-function(df, values, title){
net <- graph.data.frame(df, directed=T)
net <- set_edge_attr(net, "Legame", index=E(net), value=values)
E(net)$color[E(net)$Legame == 1] <- 'green'
E(net)$color[E(net)$Legame == 2] <- 'red'
E(net)$color[E(net)$Legame == 3] <- 'blue'
E(net)$color[E(net)$Legame == 4] <- 'orange'
png(file=paste("MyResults/Plots/",title, ".png"), width=1440, height=1440)
plot(net, edge.arrow.size=1, edge.curved=.3, edge.width=2.5, vertex.size=6.5, main=title)
legend(0.9, -0.65,
c("Low=>Low", "Low=>High", "High=>Low", "High=>High"),
col = c("green", "red", "blue", "orange"),
cex = 2.0,
lwd = 1, lty = 1)
dev.off() #da un errore strano anche se funziona tutto
}
#display expressions
display_network(df_BoolNet_expressions.LumA, values_BoolNet_expressions.LumA, "LumA - Expressions")
display_network(df_BoolNet_expressions.LumB, values_BoolNet_expressions.LumB, "LumB - Expressions")
display_network(df_BoolNet_expressions.Basal, values_BoolNet_expressions.Basal, "Basal - Expressions")
#display proteins
display_network(df_BoolNet_proteomics.LumA, values_BoolNet_proteomics.LumA, "LumA - Proteomics")
display_network(df_BoolNet_proteomics.LumB, values_BoolNet_proteomics.LumB, "LumB - Proteomics")
display_network(df_BoolNet_proteomics.Basal, values_BoolNet_proteomics.Basal, "Basal - Proteomics")
#given 2 dataframes, genes and their kind of edge, displays the relative graph
display_network <-function(df, values, title){
net <- graph.data.frame(df, directed=T)
net <- set_edge_attr(net, "Legame", index=E(net), value=values)
E(net)$color[E(net)$Legame == 1] <- 'green'
E(net)$color[E(net)$Legame == 2] <- 'red'
E(net)$color[E(net)$Legame == 3] <- 'blue'
E(net)$color[E(net)$Legame == 4] <- 'orange'
png(file=paste("MyResults/Plots/",title, ".png"), width=1440, height=1440)
plot(net, edge.arrow.size=1, edge.curved=.3, edge.width=2.5, vertex.size=6.5, main=title)
legend(0.7, -0.65,
c("Low=>Low", "Low=>High", "High=>Low", "High=>High"),
col = c("green", "red", "blue", "orange"),
cex = 2.0,
lwd = 1, lty = 1)
dev.off() #da un errore strano anche se funziona tutto
}
#display expressions
display_network(df_BoolNet_expressions.LumA, values_BoolNet_expressions.LumA, "LumA - Expressions")
display_network(df_BoolNet_expressions.LumB, values_BoolNet_expressions.LumB, "LumB - Expressions")
display_network(df_BoolNet_expressions.Basal, values_BoolNet_expressions.Basal, "Basal - Expressions")
#display proteins
display_network(df_BoolNet_proteomics.LumA, values_BoolNet_proteomics.LumA, "LumA - Proteomics")
display_network(df_BoolNet_proteomics.LumB, values_BoolNet_proteomics.LumB, "LumB - Proteomics")
display_network(df_BoolNet_proteomics.Basal, values_BoolNet_proteomics.Basal, "Basal - Proteomics")
#display expressions
display_network(df_BoolNet_expressions.LumA, values_BoolNet_expressions.LumA, "LumA - Expressions")
display_network(df_BoolNet_expressions.LumB, values_BoolNet_expressions.LumB, "LumB - Expressions")
display_network(df_BoolNet_expressions.Basal, values_BoolNet_expressions.Basal, "Basal - Expressions")
#display proteins
display_network(df_BoolNet_proteomics.LumA, values_BoolNet_proteomics.LumA, "LumA - Proteomics")
display_network(df_BoolNet_proteomics.LumB, values_BoolNet_proteomics.LumB, "LumB - Proteomics")
display_network(df_BoolNet_proteomics.Basal, values_BoolNet_proteomics.Basal, "Basal - Proteomics")
options(warn=-1)
library(stringr)
library('dplyr')
library('purrr')
library(igraph)
for (i in dev.list()[1]:dev.list()[length(dev.list())]) {
dev.off()
}
dev.list()
#now let's test out function passing boolnet files
#mRNA expressions
df_BoolNet_expressions.LumA <- from_txt_to_df("MyResults/brca_expressions.LumA.BoolNet.txt")
values_BoolNet_expressions.LumA <- from_df_to_values(df_BoolNet_expressions.LumA)
df_BoolNet_expressions.LumB <- from_txt_to_df("MyResults/brca_expressions.LumB.BoolNet.txt")
values_BoolNet_expressions.LumB <- from_df_to_values(df_BoolNet_expressions.LumB)
df_BoolNet_expressions.Basal <- from_txt_to_df("MyResults/brca_expressions.Basal.BoolNet.txt")
values_BoolNet_expressions.Basal <- from_df_to_values(df_BoolNet_expressions.Basal)
#proteins values
df_BoolNet_proteomics.LumA <- from_txt_to_df("MyResults/brca_proteomics.LumA.BoolNet.txt")
values_BoolNet_proteomics.LumA <- from_df_to_values(df_BoolNet_proteomics.LumA)
df_BoolNet_proteomics.LumB <- from_txt_to_df("MyResults/brca_proteomics.LumB.BoolNet.txt")
values_BoolNet_proteomics.LumB <- from_df_to_values(df_BoolNet_proteomics.LumB)
df_BoolNet_proteomics.Basal <- from_txt_to_df("MyResults/brca_proteomics.Basal.BoolNet.txt")
values_BoolNet_proteomics.Basal <- from_df_to_values(df_BoolNet_proteomics.Basal)
#display expressions
display_network(df_BoolNet_expressions.LumA, values_BoolNet_expressions.LumA, "LumA - Expressions")
display_network(df_BoolNet_expressions.LumB, values_BoolNet_expressions.LumB, "LumB - Expressions")
display_network(df_BoolNet_expressions.Basal, values_BoolNet_expressions.Basal, "Basal - Expressions")
#display proteins
display_network(df_BoolNet_proteomics.LumA, values_BoolNet_proteomics.LumA, "LumA - Proteomics")
display_network(df_BoolNet_proteomics.LumB, values_BoolNet_proteomics.LumB, "LumB - Proteomics")
display_network(df_BoolNet_proteomics.Basal, values_BoolNet_proteomics.Basal, "Basal - Proteomics")
#given 2 dataframes, genes and their kind of edge, displays the relative graph
display_network <-function(df, values, title){
net <- graph.data.frame(df, directed=T)
net <- set_edge_attr(net, "Legame", index=E(net), value=values)
E(net)$color[E(net)$Legame == 1] <- 'green'
E(net)$color[E(net)$Legame == 2] <- 'red'
E(net)$color[E(net)$Legame == 3] <- 'blue'
E(net)$color[E(net)$Legame == 4] <- 'orange'
png(file=paste("MyResults/Plots/",title, ".png"), width=960, height=960)
plot(net, edge.arrow.size=1, edge.curved=.3, edge.width=2.5, vertex.size=6.5, main=title)
legend(0.7, -0.65,
c("Low=>Low", "Low=>High", "High=>Low", "High=>High"),
col = c("green", "red", "blue", "orange"),
cex = 2.0,
lwd = 1, lty = 1)
dev.off() #da un errore strano anche se funziona tutto
}
#display expressions
display_network(df_BoolNet_expressions.LumA, values_BoolNet_expressions.LumA, "LumA - Expressions")
display_network(df_BoolNet_expressions.LumB, values_BoolNet_expressions.LumB, "LumB - Expressions")
display_network(df_BoolNet_expressions.Basal, values_BoolNet_expressions.Basal, "Basal - Expressions")
#display proteins
display_network(df_BoolNet_proteomics.LumA, values_BoolNet_proteomics.LumA, "LumA - Proteomics")
display_network(df_BoolNet_proteomics.LumB, values_BoolNet_proteomics.LumB, "LumB - Proteomics")
display_network(df_BoolNet_proteomics.Basal, values_BoolNet_proteomics.Basal, "Basal - Proteomics")
#given 2 dataframes, genes and their kind of edge, displays the relative graph
display_network <-function(df, values, title){
net <- graph.data.frame(df, directed=T)
net <- set_edge_attr(net, "Legame", index=E(net), value=values)
E(net)$color[E(net)$Legame == 1] <- 'green'
E(net)$color[E(net)$Legame == 2] <- 'red'
E(net)$color[E(net)$Legame == 3] <- 'blue'
E(net)$color[E(net)$Legame == 4] <- 'orange'
png(file=paste("MyResults/Plots/",title, ".png"), width=1240, height=1240)
plot(net, edge.arrow.size=1, edge.curved=.3, edge.width=2.5, vertex.size=6.5, main=title)
legend(0.7, -0.65,
c("Low=>Low", "Low=>High", "High=>Low", "High=>High"),
col = c("green", "red", "blue", "orange"),
cex = 2.0,
lwd = 1, lty = 1)
dev.off() #da un errore strano anche se funziona tutto
}
#display expressions
display_network(df_BoolNet_expressions.LumA, values_BoolNet_expressions.LumA, "LumA - Expressions")
display_network(df_BoolNet_expressions.LumB, values_BoolNet_expressions.LumB, "LumB - Expressions")
display_network(df_BoolNet_expressions.Basal, values_BoolNet_expressions.Basal, "Basal - Expressions")
#display proteins
display_network(df_BoolNet_proteomics.LumA, values_BoolNet_proteomics.LumA, "LumA - Proteomics")
display_network(df_BoolNet_proteomics.LumB, values_BoolNet_proteomics.LumB, "LumB - Proteomics")
display_network(df_BoolNet_proteomics.Basal, values_BoolNet_proteomics.Basal, "Basal - Proteomics")
options(warn=-1)
library(stringr)
library(dplyr)
library(purrr)
library(igraph)
#now let's test out function passing boolnet files
#mRNA expressions
df_BoolNet_expressions.LumA <- from_txt_to_df("MyResults/brca_expressions.LumA.BoolNet.txt")
values_BoolNet_expressions.LumA <- from_df_to_values(df_BoolNet_expressions.LumA)
df_BoolNet_expressions.LumB <- from_txt_to_df("MyResults/brca_expressions.LumB.BoolNet.txt")
values_BoolNet_expressions.LumB <- from_df_to_values(df_BoolNet_expressions.LumB)
df_BoolNet_expressions.Basal <- from_txt_to_df("MyResults/brca_expressions.Basal.BoolNet.txt")
values_BoolNet_expressions.Basal <- from_df_to_values(df_BoolNet_expressions.Basal)
#proteins values
df_BoolNet_proteomics.LumA <- from_txt_to_df("MyResults/brca_proteomics.LumA.BoolNet.txt")
values_BoolNet_proteomics.LumA <- from_df_to_values(df_BoolNet_proteomics.LumA)
df_BoolNet_proteomics.LumB <- from_txt_to_df("MyResults/brca_proteomics.LumB.BoolNet.txt")
values_BoolNet_proteomics.LumB <- from_df_to_values(df_BoolNet_proteomics.LumB)
df_BoolNet_proteomics.Basal <- from_txt_to_df("MyResults/brca_proteomics.Basal.BoolNet.txt")
values_BoolNet_proteomics.Basal <- from_df_to_values(df_BoolNet_proteomics.Basal)
#display expressions
display_network(df_BoolNet_expressions.LumA, values_BoolNet_expressions.LumA, "LumA - Expressions")
display_network(df_BoolNet_expressions.LumB, values_BoolNet_expressions.LumB, "LumB - Expressions")
display_network(df_BoolNet_expressions.Basal, values_BoolNet_expressions.Basal, "Basal - Expressions")
#display proteins
display_network(df_BoolNet_proteomics.LumA, values_BoolNet_proteomics.LumA, "LumA - Proteomics")
display_network(df_BoolNet_proteomics.LumB, values_BoolNet_proteomics.LumB, "LumB - Proteomics")
display_network(df_BoolNet_proteomics.Basal, values_BoolNet_proteomics.Basal, "Basal - Proteomics")
#given 2 dataframes, genes and their kind of edge, displays the relative graph
display_network <-function(df, values, title){
net <- graph.data.frame(df, directed=T)
net <- set_edge_attr(net, "Legame", index=E(net), value=values)
E(net)$color[E(net)$Legame == 1] <- 'green'
E(net)$color[E(net)$Legame == 2] <- 'red'
E(net)$color[E(net)$Legame == 3] <- 'blue'
E(net)$color[E(net)$Legame == 4] <- 'orange'
png(file=paste("MyResults/Plots/",title, ".png"), width=1440, height=1440)
plot(net, edge.arrow.size=1, edge.curved=.3, edge.width=2.5, vertex.size=6.5, main=title)
legend("bottomright",
c("Low=>Low", "Low=>High", "High=>Low", "High=>High"),
col = c("green", "red", "blue", "orange"),
cex = 2.0,
lwd = 1, lty = 1)
#  legend(0.7, -0.65,
#         c("Low=>Low", "Low=>High", "High=>Low", "High=>High"),
#         col = c("green", "red", "blue", "orange"),
#         cex = 2.0,
#         lwd = 1, lty = 1)
dev.off() #da un errore strano anche se funziona tutto
}
#display expressions
display_network(df_BoolNet_expressions.LumA, values_BoolNet_expressions.LumA, "LumA - Expressions")
display_network(df_BoolNet_expressions.LumB, values_BoolNet_expressions.LumB, "LumB - Expressions")
display_network(df_BoolNet_expressions.Basal, values_BoolNet_expressions.Basal, "Basal - Expressions")
#display proteins
display_network(df_BoolNet_proteomics.LumA, values_BoolNet_proteomics.LumA, "LumA - Proteomics")
display_network(df_BoolNet_proteomics.LumB, values_BoolNet_proteomics.LumB, "LumB - Proteomics")
display_network(df_BoolNet_proteomics.Basal, values_BoolNet_proteomics.Basal, "Basal - Proteomics")
#given 2 dataframes, genes and their kind of edge, displays the relative graph
display_network <-function(df, values, title){
net <- graph.data.frame(df, directed=T)
net <- set_edge_attr(net, "Legame", index=E(net), value=values)
E(net)$color[E(net)$Legame == 1] <- 'green'
E(net)$color[E(net)$Legame == 2] <- 'red'
E(net)$color[E(net)$Legame == 3] <- 'blue'
E(net)$color[E(net)$Legame == 4] <- 'orange'
png(file=paste("MyResults/Plots/",title, ".png"), width=1440, height=1440)
plot(net, edge.arrow.size=1, edge.curved=.3, edge.width=2.5, vertex.size=6.5, main=title)
legend("bottomright",
c("Low=>Low", "Low=>High", "High=>Low", "High=>High"),
col = c("green", "red", "blue", "orange"),
cex = 2.0,
lwd = 1, lty = 1)
dev.off() #da un errore strano anche se funziona tutto
net
}
#display expressions
net_expressions.LumA <- display_network(df_BoolNet_expressions.LumA, values_BoolNet_expressions.LumA, "LumA - Expressions")
net_expressions.LumB <- display_network(df_BoolNet_expressions.LumB, values_BoolNet_expressions.LumB, "LumB - Expressions")
net_expressions.Basal <- display_network(df_BoolNet_expressions.Basal, values_BoolNet_expressions.Basal, "Basal - Expressions")
#display proteins
net_proteomics.LumA <- display_network(df_BoolNet_proteomics.LumA, values_BoolNet_proteomics.LumA, "LumA - Proteomics")
net_proteomics.LumB <- display_network(df_BoolNet_proteomics.LumB, values_BoolNet_proteomics.LumB, "LumB - Proteomics")
net_proteomics.Basal <- display_network(df_BoolNet_proteomics.Basal, values_BoolNet_proteomics.Basal, "Basal - Proteomics")
mean_distance(net_proteomics.Basal)
mean_distance(net_expressions.Basal)
#intersection between graphs
inter_LumA <- intersection(net_expressions.LumA, net_proteomics.LumA)
plot(inter_LumA)
#intersection between graphs
inter_test <- intersection(net_expressions.LumB, net_proteomics.LumB)
plot(inter_test)
#intersection between graphs
inter_test <- intersection(net_expressions.Basal, net_proteomics.Basal)
plot(inter_test)
#intersection between graphs
inter_test <- intersection(net_expressions.Basal, net_proteomics.Basal)
plot(inter_test, edge.arrow.size=1, edge.curved=.3, edge.width=2.5, vertex.size=6.5)
inter_test <- intersection(net_expressions.Basal, net_proteomics.Basal)
E(inter_test)$color[E(inter_test)$Legame == 1] <- 'green'
E(inter_test)$color[E(inter_test)$Legame == 2] <- 'red'
E(inter_test)$color[E(inter_test)$Legame == 3] <- 'blue'
E(inter_test)$color[E(inter_test)$Legame == 4] <- 'orange'
plot(inter_test, edge.arrow.size=1, edge.curved=.3, edge.width=2.5, vertex.size=6.5)
inter_test <- intersection(net_expressions.Basal, net_proteomics.Basal)
E(inter_test)
E(inter_test)$color
E(inter_test)
E(inter_test)$Legame
inter_test <- intersection(net_expressions.Basal, net_proteomics.Basal,keep.all.vertices=FALSE)
E(inter_test)$color[E(inter_test)$Legame == 1] <- 'green'
E(inter_test)$color[E(inter_test)$Legame == 2] <- 'red'
E(inter_test)$color[E(inter_test)$Legame == 3] <- 'blue'
E(inter_test)$color[E(inter_test)$Legame == 4] <- 'orange'
plot(inter_test, edge.arrow.size=1, edge.curved=.3, edge.width=2.5, vertex.size=6.5)
inter_test <- intersection(net_expressions.Basal, net_proteomics.Basal,keep.all.vertices=FALSE)
E(inter_test)
E(net)
E(net)$color
E(inter_test)$Legame
inter_test <- intersection(net_expressions.LumA, net_expressions.LumB, net_expressions.Basal, keep.all.vertices=FALSE)
plot(inter_test, edge.arrow.size=1, edge.curved=.3, edge.width=2.5, vertex.size=6.5)
inter_test <- intersection(net_expressions.LumA, net_expressions.LumB, net_expressions.Basal, keep.all.vertices=TRUE)
plot(inter_test, edge.arrow.size=1, edge.curved=.3, edge.width=2.5, vertex.size=6.5)
inter_test <- intersection(net_expressions.LumA, net_expressions.LumB, net_expressions.Basal, keep.all.vertices=FALSE)
plot(inter_test, edge.arrow.size=1, edge.curved=.3, edge.width=2.5, vertex.size=6.5)
